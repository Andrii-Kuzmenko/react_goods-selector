{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","clearGoods","setState","toggleGood","good","chooseOption","optionTrue","optionFalse","this","className","type","onClick","map","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,WAAa,WACX,EAAKC,SAAS,CAAEF,aAAc,MANlC,EASEG,WAAa,SAACC,GACZ,OAAQ,EAAKL,MAAMC,eAAiBI,EAChC,EAAKH,aACL,EAAKC,SAAS,CAAEF,aAAcI,KAZtC,EAeEC,aAAe,SAACD,EAAcE,EAAoBC,GAChD,OAAQ,EAAKR,MAAMC,eAAiBI,EAChCE,EACAC,GAlBR,4CAqBE,WAAU,IAAD,OACCP,EAAiBQ,KAAKT,MAAtBC,aAER,OACE,uBAAMS,UAAU,oBAAhB,UACGT,EAEG,qBAAIS,UAAU,sCAAd,UACGT,EACA,eAED,wBACE,aAAW,YACX,UAAQ,cACRU,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKP,gBAIjB,oBAAIQ,UAAU,QAAd,+BAEL,uBAAOA,UAAU,QAAjB,SACE,gCACGZ,EAAMe,KAAI,SAAAR,GAAI,OACb,qBAEE,UAAQ,OACRK,UAAWI,IAAW,CACpB,+BAAgCb,IAAiBI,IAJrD,UAOE,6BACE,wBACE,UACE,EAAKC,aAAaD,EAAM,eAAgB,aAE1CM,KAAK,SACLD,UAAWI,IACT,SACA,CACE,UAAWb,IAAiBI,IAGhCO,QAAS,kBAAM,EAAKR,WAAWC,IAXjC,SAaG,EAAKC,aAAaD,EAAM,IAAK,SAIlC,oBAAI,UAAQ,YAAYK,UAAU,eAAlC,SACGL,MAzBEA,iBA/CrB,GAAyBU,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a551b59a.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  clearGoods = (): void => {\n    this.setState({ selectedGood: '' });\n  };\n\n  toggleGood = (good: string): void => {\n    return (this.state.selectedGood === good)\n      ? this.clearGoods()\n      : this.setState({ selectedGood: good });\n  };\n\n  chooseOption = (good: string, optionTrue: string, optionFalse: string) => {\n    return (this.state.selectedGood === good)\n      ? optionTrue\n      : optionFalse;\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {selectedGood}\n              {' is selected'}\n\n              <button\n                aria-label=\"clearList\"\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.clearGoods}\n              />\n            </h1>\n          )\n          : (<h1 className=\"title\">No goods selected</h1>)}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={classNames({\n                  'has-background-success-light': selectedGood === good,\n                })}\n              >\n                <td>\n                  <button\n                    data-cy={\n                      this.chooseOption(good, 'RemoveButton', 'AddButton')\n                    }\n                    type=\"button\"\n                    className={classNames(\n                      'button',\n                      {\n                        'is-info': selectedGood === good,\n                      },\n                    )}\n                    onClick={() => this.toggleGood(good)}\n                  >\n                    {this.chooseOption(good, '-', '+')}\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}